version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - pipeline-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_DOCKER://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_DOCKER
    depends_on:
      - zookeeper
    networks:
      - pipeline-net

  spark:
    image: bitnami/spark:3.3.2
    container_name: spark
    environment:
      - SPARK_MODE=master
    command: >
      sh -c "
        pip install psycopg2-binary &&
        /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh
      "
    networks:
      - pipeline-net
    volumes:
      - ../app:/app  # Python scripts (spark_stream.py etc.)
      - ./jars/postgresql-42.7.2.jar:/opt/bitnami/spark/jars/postgresql-42.7.2.jar

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: ecommerce
      POSTGRES_PASSWORD: ecommerce123
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - pipeline-net

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - pipeline-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - pipeline-net
    volumes:
      - grafana-storage:/var/lib/grafana

  airflow:
    image: apache/airflow:2.7.1
    container_name: airflow
    ports:
      - "8081:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=your_fernet_key_here
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://ecommerce:ecommerce123@postgres:5432/airflow_db
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
      - ../airflow/plugins:/opt/airflow/plugins
      - ../app:/app
      - /var/run/docker.sock:/var/run/docker.sock  # allow access to Docker daemon to run docker exec
    depends_on:
      - postgres
    networks:
      - pipeline-net
    command: >
      bash -c "
        pip install gspread oauth2client kafka-python faker faker_commerce &&
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Air --lastname Flow --role Admin --email admin@example.com &&
        airflow webserver & airflow scheduler 
      "

networks:
  pipeline-net:

volumes:
  grafana-storage:
  postgres-data:
